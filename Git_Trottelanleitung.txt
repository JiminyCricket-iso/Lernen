Git trottelanleitung: https://www.youtube.com/watch?v=SWYqp7iY_Tc

Basic Befehle:
Für lokale Repositorys (auf dem eigenen PC)
- git init			// initialisiert ein lokales Repository (.gitfolder) im Projektordner.
- git add <filename>		// Fügt eine Datei der Git Index-Staging-Area zu. Hat man das gemacht kann man commiten.
- git add*.html			// Fügt alle Dateien mit der Endung .html der Staging-Area zu
- git add .			// Fügt alles was sich in dem Ordner befindet der Staging-Area hinzu
- git rm --cached <filename>	// nimmt die Datei aus der Staging-Area wieder raus. 
- git status			// Damit kann man nachsehen, welche Dateien sich in der Index-Staging-Area befinden, welche 				   	   durch den commit Befehl commitet werden.
- git commit			// Nimmt alles was sich in der index-, oder Staging-Area befindet und fügt es dem lokalen 				   Repository zu.
- git commit -m 'Kommentar'	// commiten ohne den editor zu öffnen. man schreibt den Komentar einfach in die 
				   Anführungszeichen 

Für remote Repositorys (z.B.GitHub)
- git push			// Nimmt das lokale Repository und schiebt (pusht) es ins remote Repository (also ins inet 				   z.B. in meinen Github accound).
- git pull			// Zieht die aktuellste Version des in GitHub hochgeladenen Repositorys.
- git clone GitLink		// Kopiert das remote Repository in den aktuellen Ordner auf dem Computer.



-Bevor man überhaupt was macht sollte man Git seinen Benutzernamen (BillyBones)  und seine emailadresse   (mattes.ohse@gmail.com) geben: 
 git config --global user.name "BillyBones"
 git config --global user.email "mattes.ohse@gmail.com"

Die '.gitignore' Datei:
Mit einem Editor eine datei mit dem Namen .gitignore erstellen. die dateinamen (z.B. test.txt), die in dieser Datei stehen werden nicht ins git Repository commitet, wenn man mit 'git add .' alle Dateien der Staging-Area zugefühgt werden.

Branches erstellen:
Ein branch ist eine Kopie eines Repositorys. Man arbeitet nicht am Original, sondern nur den branch also der kopie.
um einen Branch zu erstellen verwendetman dein Befehl: git branch NameDesBranches
um in den Branch zu wechseln verwendet man den befehl: git checkout NameDesBranches
um wieder in den MasterBranch zu kommen verwendet man (logischerweise) den Befehl: git checkout master
um 2 Branches miteinander zu mergen verwendet man (wenn man sich im MasterBranch befindet): git merge NameDesBranches  
 
Schritte um github Repository zu aktuallisieren
1) git add . 
2) git commit -m 'Komentar'
3) git push





 